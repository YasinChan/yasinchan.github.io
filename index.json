[{"content":"\n\n### 前言\n\nthis是javascript中的关键字之一，在编写程序的时候经常会用到，正确的理解和使用关键字this尤为重要。this 也让我们的代码更加优雅，但前提便是我们要理解她。\n\n\n\n这里推荐方方老师在知乎发的一篇关于[this](https://zhuanlan.zhihu.com/p/23804247?refer=study-fe)的解释很精辟，很值得学习。以下是我用一段代码来理解`this`。\n\n\n### 正文\n下面这段代码，涵盖了很多常见 this 使用的情况。我们可以通过分析这段代码中的 this 来理解 this 。\n\n```\n\u003cbody\u003e\n\t\n\u003cbutton id=\"btn\"\u003e点我\u003c/button\u003e\n\n\u003c/body\u003e\n\n\u003cscript\u003e\n\t\nvar app = {\n\tinit: function(){\n\t\tthis.target = document.queryselector('#btn');         // i\n\t\tthis.bind();                                          // i\n\t},\n\n\tbind: function(){\n\t\tvar _this = this;                                    //  j\n\n\t\tsettimeout(this.sayhaha, 2000);                      //  x\n\t\t\n\t\tthis.target.addeventlistener('click', function(){    //  i\n\t\t\tvar self = this;                                 \n\t\t\tthis.innertext = '我被点了';                  //  p\n\t\t\t_this.sayhello;\n\n\t\t\tsettimeout(function(){\n\t\t\t\tself.innertext = '点我';                       \n\t\t\t\tconsole.log(this);                   //  y\n\t\t\t\t_this.saygoodbye();\n\t\t\t}, 1000)\n\t\t});\n\t},\n\n\tsayhello: function(){\n\t\tconsole.log('hello');                                   \n\t\tconsole.log(this);                                   //  z\n\t},\n\tsaygoodbye: function(){\n\t\tconsole.log('goodbye');\n\t\tconsole.log(this);                                   //  z\n\t},\n\tsayhaha: function(){\n\t\tconsole.log('haha');\n\t\tconsole.log(this)                                    //  z\n\t}\n};\n\n\napp.init();\n\n\u003c/script\u003e\n```\n\n- 我用数字 i 、 j 、 p 、 x 、 y 、 z 来代指各处的`this`\n\n\n\n\n\n- 首先，我们可以轻易的看出 *i* 处的this指的就是 ` app  ` 这个对象； *p* 处的 `this` 指的是 `#btn`;\n\n\n\n- *j* 处用`var _this = this ` 此处`this`指的是`app`这个对象，通过赋值给`_this`。可以方便下面嵌套的函数调用。而且在以后对象名变换也不要用更改函数中的名字，减少出错概率。\n\n\n\n- 我们先来看 *y* 处的`this ` ，有个概念是`settimeout`中的`this`是全局对象，也就是`widow`，因为在使用`settimeout`的时候，js 会把里面的函数放在任务执行函数的最后，也就相当于是放到全局作用域中了。所以此时的`this`也就是指的是`window`了 。\n\n\n\n- 那么我们看下 *x* 处的`this`是不是也是指的是`window`呢？其实不是，这里的`this`也许会被误解为也是全局对象，但是其实是这样的：我们所说的`settimeout`中作为全局对象的`this`是指`settimeout`下匿名函数的`this`。而这里面的`this`并没有进入匿名函数中所以这里的`this`还是指`app`。\n\n\n\n- 最后的 *z* 处的`this`都是指的是`app`。因为`sayhello`被`_this`调用，`_this`指的是`app`所以此处的`this`指的是`app`。另外两个同理。\n\n\n","link":"this.html","preview":"问题整理","title":"this 理解"},{"content":"\r\n\r\n### 前言\r\n最近配置xampp过程中遇到apache点击start却无法开启，google后发现也有很多人遇到这种情况。查阅许久，问题成功解决。\r\n\r\n#### 解决方法\r\n当我们打开xammp时，我们点击apache中的start却无法开启，下面报错\r\n```\r\n[apache]  error: apache shutdown unexpectedly.\r\n[apache]  this may be due to a blocked port, missing dependencies, \r\n[apache]  improper privileges, a crash, or a shutdown by another method.\r\n[apache]  press the logs button to view error logs and check\r\n[apache]  the windows event viewer for more clues\r\n[apache]  if you need more help, copy and post this\r\n[apache]  entire log window on the forums\r\n```\r\n此时，我们可以打开`g:\\xampp\\apache\\conf`(g:\\xampp是我的安装目录)下找到`httpd.conf`文件，可以用sublime打开后找到\r\n```\r\nlisten80\r\n```\r\n\r\n```\r\nservername localhost:80\r\n```\r\n\r\n将其中的80改为8080\r\n\r\n[来源](http://stackoverflow.com/questions/18300377/xampp-apache-error-apache-shutdown-unexpectedly)\r\n\r\nps: 原文中还有一个步骤，翻译过来就是：\r\n打开`httpd-ssl.conf`找到\r\n```\r\nlisten 443\r\n```\r\n\r\n```\r\nvirtualhost _default_:443\r\nservername localhost:443\r\n```\r\n\r\n将其中的443改为4433。\r\n但是我发现不做这一步也没有问题。\r\n\r\n\r\n此时我们重新开启apache，发现可以开启，但是却出现以下的问题\r\n```\r\n[apache]  problem detected!\r\n[apache]  port 80 in use by \u0026quot;unable to open process\u0026quot; with pid 4!\r\n[apache]  apache will not start without the configured ports free!\r\n[apache]  you need to uninstall/disable/reconfigure the blocking application\r\n[apache]  or reconfigure apache and the control panel to listen on a different port\r\n```\r\n\r\n此时，我们可以运行对话框（按win + r键）键入：`services.msc`\r\n\r\n出现如下界面：\r\n\r\n![](/images/服务.png)\r\n\r\n找到箭头所指后右键关闭。\r\n\r\n[来源](http://stackoverflow.com/questions/20558410/xampp-port-80-in-use-by-unable-to-open-process-with-pid-4-12)\r\n\r\n此时我们重启apache发现问题解决。\r\n\r\n将我们需要的php文件放入`g:\\xampp\\htdocs`文件夹下在浏览器打开`localhost:8080/文件名.php`即可访问我们php文件。\r\n\r\n\r\nps：如果设置过程中还出现其他问题，可以点击我的文中的`来源`，看各个步骤完整的解决方法。","link":"xampp安装过程中问题解决方法.html","preview":"问题整理","title":"xampp安装过程中问题的解决方法"},{"content":"\r\n\r\n## 楔子\r\n最近做的一道百度ife中的题目遇到关于tab切换，而本人还没学到js，从而需要用css写出tab切换[demo](http://yasinchan.com/testfirststage/test9/test9.html) css见[github](https://github.com/yasinchan/testfirststage/blob/master/test9/test9.css) `从578至665行`\r\n\r\n### table\r\n\r\ntable中我们可以加入如下的css来使表格中的线为一根线\r\n``` yaml\r\nhtml:\r\n   \u003ctable border=\"1\"\u003e\u003c/table\u003e\r\ncss:\r\n   table{\r\n        border-collapse:collase;\r\n        border-spacing;\r\n   }   \r\n```\r\n\r\n### 问：css中的~是什么？\r\n\r\n这是 `css3 element1~element2 选择器`\r\n\r\n定义和用法\r\n　　element1~element2 选择器 element1 之后出现的所有 element2。\r\n　　两种元素必须拥有相同的父元素，但是 element2 不必直接紧随 element1。\r\n\r\n实例：\r\n为所有相同的父元素中位于 p 元素之后的所有 ul 元素设置背景：\r\n``` yaml\r\n    p~ul{\r\n        background:#ff0000;\r\n    }\r\n```\r\n\r\n来源：[https://zhidao.baidu.com/question/1691564837342076508.html](https://zhidao.baidu.com/question/1691564837342076508.html)\r\n\r\n\r\n### 问：class^=,class*= ,class$=含义\r\n``` yaml\r\n\u003cdiv class=\"xxx\"\u003e\r\n    \u003cdiv class=\"span\"\u003e\u003c/span\u003e         \u003c!-- 1--\u003e\r\n    \u003cdiv class=\"spanabc\"\u003e\u003c/span\u003e      \u003c!-- 2--\u003e\r\n    \u003cdiv class=\"abcspan\"\u003e\u003c/span\u003e      \u003c!-- 3--\u003e\r\n    \u003cdiv class=\"abcspanabc\"\u003e\u003c/span\u003e   \u003c!-- 4--\u003e\r\n\u003c/div\u003e\r\n```\r\n\r\n.xxx [class*=\"span\"] 是指.xxx里面所有的包含span的选择器即以上四个都是\r\n\r\n.xxx [class^=\"span\"] 是指.xxx里面以span开头的即1 2是\r\n\r\n.xxx [class$=\"span\"] 是指.xxx里面以span结尾的即1 3是\r\n \r\n\r\n### :checked 是什么？\r\n这是伪类选择器\r\n匹配每个已被选中的 input 元素（只用于单选按钮和复选框）。\r\n\r\n来源： [w3school](http://www.w3school.com.cn/cssref/selector_checked.asp)\r\n\r\n\r\n### 问：z-index在css中怎么用？\r\n\r\n答1：\r\n当你定义的css中有position属性值为absolute、relative或fixed，\r\n\r\n用z-index此取值方可生效。\r\n此属性参数值越大，则被层叠在最上面。\r\n例子：\r\n\r\n``` yaml\r\n\u003chtml\u003e\r\n\u003chead\u003e\r\n\u003cstyle\u003e\r\n.z1,.z2,.z3{position:absolute;width:200px;height:100px;padding:5px 10px;color:#fff;text-align:right;}\r\n.z1{z-index:1;background:#000;}\r\n.z2{z-index:2;top:30px;left:30px;background:#c00;}\r\n.z3{z-index:3;top:60px;left:60px;background:#999;}\r\n\u003c/style\u003e\r\n\u003c/head\u003e\r\n\u003cbody\u003e\r\n\u003cdiv class=\"z1\"\u003ez-index:1\u003c/div\u003e\r\n\u003cdiv class=\"z2\"\u003ez-index:2\u003c/div\u003e\r\n\u003cdiv class=\"z3\"\u003ez-index:3\u003c/div\u003e\r\n\u003c/body\u003e\r\n\u003c/html\u003e\r\n```\r\n\r\n上面三个css，将根据z-index的值决定谁在最上层！\r\n\r\n答2：\r\nz-index就是网页的z轴，用相对定位绝对定位把两个层重叠在一起，z-index的值越大，就越靠上，注意，z-index没有单位，z-index：99；这样写就够了\r\n\r\n来源：[https://zhidao.baidu.com/question/416073543.html](https://zhidao.baidu.com/question/416073543.html)\r\n\r\n\r\n","link":"纯css实现tab切换中遇到的问题.html","preview":"解决方法","title":"纯css实现tab切换中遇到的问题"},{"content":"\r\n\r\n## overflow：hidden； 含义\r\n\r\n来源：[http://jingyan.baidu.com/article/d45ad148e2a7f969552b80ae.html](http://jingyan.baidu.com/article/d45ad148e2a7f969552b80ae.html)\r\n\r\noverflow:hidden这个css样式是大家常用到的css样式，但是大多数人对这个样式的理解仅仅局限于隐藏溢出，而对于清除浮动这个含义不是很了解。一提到清除浮动，我们就会想到另外一个css样式：clear:both，我相信对于这个属性的理解大家都不成问题的。但是对于“浮动”这个词到底包含什么样的含义呢？我们下面来详细的阐述一下。 \r\n\r\n这是一个常用的div写法，下面我们来书写样式。大家可以在dmx中自己做试验\r\n\r\n .box{ \r\n\r\n          width:500px; \r\n\r\n          background:#000; \r\n\r\n          height:500px;\r\n\r\n } \r\n\r\n .content { \r\n\r\n          float:left; \r\n\r\n          width:600px; \r\n\r\n          height:600px; \r\n\r\n          background:red;\r\n\r\n } \r\n\r\n　　给box这个div加了一个overflow:hidden这个属性解决了这个问题。我们直到overflow:hidden这个属性的作用是隐藏溢出，给box加上这个属性后，我们的content 的宽高自动的被隐藏掉了。另外，我们再做一个试验，将box这个div的高度值删除后，我们发现，box的高度自动的被content 这个div的高度值给撑开了。说到这里，我们再来理解一下“浮动”这个词的含义。我们原先的理解是，在一个平面上的浮动，但是通过这个试验，我们发现，这不仅仅是一个平面上的浮动，而是一个立体的浮动！也就是说，当content 这个div加上浮动这个属性的时候，在显示器的侧面，它已经脱离了box这个div，也就是说，此时的content 的宽高是多少，对于已经脱离了的box来说，都是不起作用的。当我们全面的理解了浮动这个词的含义的时候，我们就理解overflow:hidden这个属性中的解释，清除浮动是什么意思了。也就是说，当我们给box这个div加上overflow:hidden这个属性的时候，其中的content 等等带浮动属性的div的在这个立体的浮动已经被清除了。这就是overflow:hidden这个属性清除浮动的准确含义。当我们没有给box这个div设置高度的时候，content 这个div的高度，就会撑开box这个div，而在另一个方面，我们要注意到的是，当我们给box这个div加上一个高度值，那么无论content 这个div的高度是多少，box这个高度都是我们设定的值。而当content 的高度超过box的高度的时候，超出的部分就会被隐藏。这就是隐藏溢出的含义！\r\n\r\n## overflow：hidden； 误解\r\n来源：作者：[小李刀刀](http://ofcss.com/2011/03/20/misunderstood-of-overflow-hidden.html)\r\n\r\n开始的时候，我认为这个属性使用会裁剪掉我的子元素。\r\n但事实是拥有overflow:hidden样式的块元素内部的元素溢出并不总是被隐藏，具体来说，需要同时满足以下条件：\r\n\r\n- 1.拥有overflow:hidden样式的块元素不具有position:relative和position:absolute样式；\r\n- 2.内部溢出的元素是通过position:absolute绝对定位； 如果你只关心结论，那么记住这两点就够了。\r\n\r\n也就是说爷爷相对定位，老爸规定溢出隐藏，可是儿子是绝对定位元素。这时候儿子是否隐藏由爷爷决定，而不是老爸。\r\n\r\n\r\n## 其他（深入理解流体特性和bfc特性下多栏自适应布局）\r\n来源：[张鑫旭](http://www.zhangxinxu.com/wordpress/tag/overflowhidden/)","link":"overflow：hidden.html","preview":"overflow：hidden； 含义与误解","title":"关于 overflow：hidden； 总结"},{"content":"\n\n## yasinchan简介\n\n在下陈耀耀，第一次做博客，紧张又兴奋。我会在博客中记录自己的成长，努力学习。\n![初来乍到请多关照](/images/img_2257.jpg)\n\n### 社交账号\n- 新浪微博：[耀耀大大帅哥](http://weibo.com/u/5669462960/)\n- github:[yasinchan](https://github.com/yasinchan/)\n- qq:867103198\n- 微信：cyy867103198\n- 邮箱：yasinchan2016@gmail.com\n\n### 特别鸣谢\n- [solarhell](https://solarhell.com/)给予我的帮助\n","link":"my first blog.html","preview":"初来乍到，请多关照。","title":"我的第一篇博客"}]